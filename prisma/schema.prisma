// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  username  String
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  sessions       Session[]
  ownProjects    Project[]
  cardActivities CardActivity[]

  @@map("users")
}

model Session {
  id        String   @id @default(uuid())
  userId    String
  token     String
  createdAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id])

  @@map("sessions")
}

model Project {
  id        String   @id @default(uuid())
  name      String
  ownerId   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  owner User @relation(fields: [ownerId], references: [id])

  lists  List[]
  labels Label[]

  @@map("projects")
}

model List {
  id        String   @id @default(uuid())
  name      String
  projectId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  project Project @relation(fields: [projectId], references: [id])
  cards   Card[]

  @@map("lists")
}

model Card {
  id          String  @id @default(uuid())
  title       String
  description String?
  listId      String

  list       List           @relation(fields: [listId], references: [id])
  activity   CardActivity[]
  cardLabels CardLabel[]

  @@map("cards")
}

model Label {
  id        String   @id @default(uuid())
  title     String
  projectId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  project    Project     @relation(fields: [projectId], references: [id])
  cardLabels CardLabel[]

  @@map("labels")
}

model CardActivity {
  id              String   @id @default(uuid())
  actionPerformed String
  cardId          String
  createdAt       DateTime @default(now())
  performedBy     String

  user   User   @relation(fields: [performedBy], references: [id])
  card   Card   @relation(fields: [cardId], references: [id])

  @@map("card_activity")
}

model CardLabel {
  id        String   @id @default(uuid())
  cardId    String
  labelId   String
  colorId   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  card  Card  @relation(fields: [cardId], references: [id])
  label Label @relation(fields: [labelId], references: [id])
  color Color @relation(fields: [colorId], references: [id])

  @@map("cards_labels")
}

model Color {
  id    String @id @default(uuid())
  name  String
  color String

  cardLabels CardLabel[]

  @@unique([name, color])
  @@map("colors")
}
